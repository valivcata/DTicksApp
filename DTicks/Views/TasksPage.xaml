<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="DTicks.Views.TasksPage"
             xmlns:model="clr-namespace:DTicks.Models"
             xmlns:vm="clr-namespace:DTicks.ViewModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             Title="{Binding PageTitle}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Command="{Binding TickAllCommand}" Text="Tick all" />
    </ContentPage.ToolbarItems>

    <Grid>
        <RefreshView Command="{Binding LoadItemsCommand}" IsRefreshing="{Binding IsBusy}">
            <CollectionView x:Name="TaskListView" ItemsSource="{Binding Items}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <SwipeView>
                            <SwipeView.RightItems>
                                <SwipeItems>
                                    <SwipeItem
                                        BackgroundColor="Green"
                                        Text="Tick"
                                        Command="{Binding Source={x:Reference TaskListView}, Path=BindingContext.ItemChecked}"
                                        CommandParameter="{Binding .}"/>
                                    <SwipeItem
                                        BackgroundColor="Blue"
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type vm:TasksViewModel}}, Path=ItemSwiped}"
                                        CommandParameter="{Binding .}"
                                        Text="Modify"/>
                                </SwipeItems>
                            </SwipeView.RightItems>
                            <SwipeView.LeftItems>
                                <SwipeItems>
                                    <SwipeItem
                                        BackgroundColor="Red"
                                        Command="{Binding Source={x:Reference TaskListView}, Path=BindingContext.DeleteCommand}"
                                        CommandParameter="{Binding .}"
                                        Text="Delete"/>
                                </SwipeItems>
                            </SwipeView.LeftItems>
                            <Frame
                                CornerRadius="10"
                                HasShadow="True"
                                Padding="10"
                                Margin="10,10,10,10"
                                BackgroundColor="White"
                                BorderColor="Blue">
                                <!--<Frame.Triggers>
                                    <DataTrigger TargetType="Frame" Binding="{Binding Path=IsChecked}" Value="True">
                                        <Setter Property="BackgroundColor" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame" Binding="{Binding Path=IsChecked}" Value="False">
                                        <Setter Property="BackgroundColor" Value="White"/>
                                    </DataTrigger>
                                </Frame.Triggers>-->
                                <!--BorderColor="Blue"
                                BackgroundColor="{Binding Source={RelativeSource AncestorType={x:Type vm:TasksViewModel}}, Path=FrameColor}">-->
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type vm:TasksViewModel}}, Path=ItemTapped}"
                                        CommandParameter="{Binding .}"
                                        NumberOfTapsRequired="1" />
                                </Frame.GestureRecognizers>
                                <Grid
                                     ColumnDefinitions="*, Auto"
                                     RowDefinitions="Auto, Auto">
                                    <Label
                                        FontSize="16"
                                        LineBreakMode="NoWrap"
                                        Grid.Column="0"
                                        VerticalOptions="Center"
                                        Text="{Binding Title}" />
                                </Grid>
                            </Frame>
                        </SwipeView>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
                <CollectionView.EmptyView>
                    <ContentView>
                        <VerticalStackLayout>
                            <Label
                                HorizontalOptions="Center"
                                VerticalOptions="Center"
                                Text="All tasks are Ticked!" />
                        </VerticalStackLayout>
                    </ContentView>
                </CollectionView.EmptyView>
            </CollectionView>
        </RefreshView>
        <!--<BoxView
            Margin="10, 10, 10, 10"
            BackgroundColor="Blue"
            HeightRequest="1"/>
        <RefreshView Command="{Binding LoadCompletedItemsCommand}" IsRefreshing="{Binding IsBusy}">
            <CollectionView x:Name="CompletedTaskListView" ItemsSource="{Binding CompletedItems}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Frame
                            CornerRadius="10"
                            HasShadow="True"
                            Padding="10"
                            Margin="10,10,10,10"
                            BorderColor="DarkGreen"
                            BackgroundColor="LightGreen">
                            --><!--<Frame.Triggers>
                                <DataTrigger TargetType="Frame" Binding="{Binding Path=IsChecked}" Value="True">
                                    <Setter Property="BackgroundColor" Value="LightGreen"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Frame" Binding="{Binding Path=IsChecked}" Value="False">
                                    <Setter Property="BackgroundColor" Value="White"/>
                                </DataTrigger>
                            </Frame.Triggers>--><!--
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer
                                    Command="{Binding Source={RelativeSource AncestorType={x:Type vm:TasksViewModel}}, Path=ItemTapped}"
                                    CommandParameter="{Binding .}"
                                    NumberOfTapsRequired="1" />
                            </Frame.GestureRecognizers>
                            <Grid
                                ColumnDefinitions="*, Auto"
                                RowDefinitions="Auto, Auto">
                                <Label
                                    FontSize="16"
                                    LineBreakMode="NoWrap"
                                    Grid.Column="0"
                                    VerticalOptions="Center"
                                    Text="{Binding Title}" />
                            </Grid>
                        </Frame>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </RefreshView>-->
        <Frame
            CornerRadius="30"
            BackgroundColor="Blue"
            HeightRequest="60"
            WidthRequest="60"
            Padding="0"
            HasShadow="True"
            VerticalOptions="End"
            HorizontalOptions="End"
            Margin="20"
            >
            <Button
                Text="+"
                TextColor="White"
                FontSize="20"
                Command="{Binding AddItemCommand}"/>
        </Frame>
    </Grid>
</ContentPage>